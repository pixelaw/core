name: Docker Image CI

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - '**'

env:
  CARGO_TERM_COLOR: always
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io
  RUST_VERSION: 1.81.0
  DEPLOY_NAME: core


jobs:
  buildImage:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # DOJO VERSION
      - name: Retrieve DOJO_VERSION
        run: |
          echo DOJO_VERSION=$(cat DOJO_VERSION) >> "$GITHUB_ENV"

      # SETUP BUILDX
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      # LOGIN
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # METADATA
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            DOJO_VERSION=${{ env.DOJO_VERSION }}
          push: true
          platforms: linux/amd64,linux/arm64
#          platforms: linux/arm64

          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          secrets: |
            DOJO_KEYSTORE_PASSWORD=${{ secrets.DOJO_KEYSTORE_PASSWORD }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Move new cache
        run: mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create GitHub Release
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          TAG=${{ github.ref }}
          VERSION=${TAG#refs/tags/}
          gh release create $VERSION -t $VERSION -n "Release notes for $VERSION"

  populateImage:
    needs: buildImage
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Retrieve DOJO_VERSION
        run: |
          echo DOJO_VERSION=$(cat DOJO_VERSION) >> "$GITHUB_ENV"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-populated
          tags: |
            type=schedule
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push populated Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: "populate.Dockerfile"
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            DOJO_KEYSTORE_PASSWORD=${{ secrets.DOJO_KEYSTORE_PASSWORD }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
